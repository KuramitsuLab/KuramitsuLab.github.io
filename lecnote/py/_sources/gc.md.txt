
## 入力とリスト

最もよく使うのが入力からN個の数値を読むときです。
そのまま、リストとして取り出せます。

__1行に数値が$N$個ある場合__
```
6
1 2 3 5 8 13 
```

```
N = int(input())
a = [int(t) for t in input().split()]
```

__1行に数値が$N$個ある場合__

```
a = list(map(int, input().split()))
a
```

__$N$行に数値がある場合__

入力例
```
3 
1 2 3 
5 8 13
21 34 55
```

```
N = int(input())
a = []
for i in range(N):
	a.append([int(t) for t in input().split()])
```

### リストを使う裏技

<div class="admonition tip">

**(問題: おつり)**

レジで1000円札を1枚出した時，もらうおつりに含まれる硬貨の枚数を求めるプログラムを作成せよ．


入力例：
```
10
65
100
30
95
```

出力例：
```
68
```

[AtCoder (JOI2008 予選)](https://atcoder.jp/contests/joi2008yo/tasks/joi2008yo_a)

</div>

__(解法) リストを使うと簡単です__

1. 硬貨の種類を`coins = [500, 100, 50, 10, 5, 1]`のようにリストにする
2. `coins`を順番に何枚使うかしらべる
3. 合計枚数を出力する
 
## 演習問題

まずは、リストを使わなくても解ける問題ですが、リストの練習を兼ねて解いてみましょう。

### 平均点

<div class="admonition tip">

**例題（平均点）**

期末試験は5人受験した。
点数が40点未満の生徒は全員，補習を受け，成績が40点になった。
5人の平均点を求めよ。

入力例：
```
10
65
100
30
95
```

出力例：
```
68
```

[AtCoder (JOI2014 予選)](https://atcoder.jp/contests/joi2014yo/tasks/joi2014yo_a)

</div>

__(解法) リストを使う場合__

1. 期末試験を記録する空の得点リスト `scores` を用意する
2. 5人分繰り返し、点数を読んで、`scores` に追加する 
3. 平均点は `sum(scores) // 5`

### リスト

<div class="admonition tip">

**(問題： 共通要素)**

長さ $n$の整数列 $a$と長さ$m$の整数列$b$が与えられる。
$a$と$b$の両方に出現する整数を全て昇順(小さいから大きい順)で出力せよ。

入力例：
```
10
65
100
30
95
```

出力例：
```
68
```

[情報オリンピック一次予選(2021)](https://atcoder.jp/contests/joi2021yo1a/tasks/joi2021_yo1a_c)

</div>


__(解法1) まずはこちらを解けるようにしよう__

1. あらかじめ、昇順で `a` をソートしておきます
2. `a[0]`から`a[n-1]`まで順番に、`b`に含まれているか調べる

__(解法2) 数列の代わりに集合を用いる__

1. `a` と`b`を**集合(set)**に変換し、集合積$A \cap B$を計算する
2.  $A \cap B$を昇順にソートして出力する

<div class="alert alert-info">

集合とリスト

集合は重複を認めない順序のない値の集まりです。
リストをマスターしたら、集合も使えるようになっておきましょう。

</div>


<div class="admonition tip">

**(問題： 最長昇順連続部分列)**

長さ $n$の正整数列 $a$が与えられる. 
$a$の連続部分列のうち、昇順(小さいから大きい順)に並んでいる列の最長のものの長さを求めよ

[JOI 2019/2020 一次予選[(https://atcoder.jp/contests/joi2020yo1c/tasks/joi2020_yo1c_c)

</div>

__(解法) 繰り返しを2回使います__

1. `a[i] <= a[i+1]`となる`i`を探す
2. `i`が見つかったら、`j = i`として`a[j] <= a[j+1]`がいくつ続くか調べる



### (裏技) 複数行の入力をCOPYする方法

Colabは、プログラミング学習用に便利な道具ですが、
必ずしもオンラインジャッジに適した作りになっていません。
特に、入力データを手で毎回入力するのは面倒です。

\begin{multicols}{2}
そこで、手入力の代わりにデータをコピペできるように裏技を用意しました。
オリジナルの\CC{input()}関数を書き換えてしまうので、ほぼ\textbf{禁術}です。
\columnbreak
\begin{center}
\includegraphics[width=5cm]{./figs/copy.pdf} 
\end{center}

\end{multicols}

```
!pip install -U git+https://github.com/KuramitsuLab/kolab.git
from kolab.regio import In, input
```

\begin{PyOut}
...
Successfully installed kolab-0.0.2
\end{PyOut}

入力データは、\verb|%%In|と1行目に書いたコードセルにコピーします。

```
%%In
3
1 2 3
```

実行ボタンを押すと、入力データは{\Colab}に登録されます。
次回、Python プログラムを実行するとき、
`%%In`にコピーした入力が読み込まれるようになります。

```
n = int(input())
a, b, c = map(int, input().split())
print(n)
print(a, b, c)
```

複雑な入力を扱うときは、是非、活用してください。

\begin{cbox}{input()を元に戻すには}
新しいノートブックを開くと、\verb|input()|は元通りに戻ります
\end{cbox}


\subsection{最初の情報オリンピック}

それでは、最初の情報オリンピック（予選）の問題に挑戦してみましょう。

\hr
\HBold{(問題: 合計時間)}
太郎君は 3カ所の店を訪ねることを日課にしている． 家を出発し， 決まった順番で 
3 カ所の店を回った後，家に帰る． ときどき，ストップウォッチを使って，各区間を移動するのに何秒かかったかを計り，その秒数を記録す る．
ある日の計測結果が与えられたとき，この日の移動時間の合計が何分何秒かを求めるプログラムを作成せよ．

\URL{https://atcoder.jp/contests/joi2011yo/tasks/joi2011yo_a}

\hr

\begin{flushright}
\includegraphics[width=4cm]{./figs/pencil.pdf} 
\end{flushright}

\vspace{-3cm}
\emph{手順}
\begin{enumerate}
\item 問題文をしっかり読んでみる\\
(紙と鉛筆で図示しながら読むとよい)
\item 入力例と出力例をみて、問題を正しく理解したか確認する
\item {\Colab}上で入出力プログラムを書いてみる
\item サンプルの入出力で動作を試してみる\\
(出力結果が出力例と{\color{red} 空白や改行を含めて完全に一致するか}確認する)
\item オンラインジャッジに提出する
\end{enumerate}

\begin{cbox}{模範回答}
研究問題の模範回答は講義ノートの最後にあります
\end{cbox}


\newpage
\section{過去問の研究}

if文が書けるようになると、プログラミングできる幅が広がります。
いくつか情報オリンピックの過去問にチャレンジして、練習していきましょう。

%\newpage

\hr
\HBold{(問題： 3つの整数)}
3つの整数 a, b, cが与えられる。
a, b, c はそれぞれ$1$または$2$である.
$1$と$2$のうち、どちらが多いか

JOI 2019/2020 一次予選: \URL{https://atcoder.jp/contests/joi2020yo1a/tasks/joi2020_yo1a_a}

\hr

\emph{(解法1)}
\begin{enumerate}
\item 変数\CC{a}が$1$か$2$で場合分けする
\item (1. の条件のもと）変数\CC{b}が$1$か$2$で場合分けする
\item (2. の条件のもと）変数\CC{c}が$1$か$2$で場合分けする
\end{enumerate}

\emph{(解法2)}
\begin{enumerate}
\item $2$が多くなるのは、$a+b+c$がどのような場合か考える
\end{enumerate}

\hr
\HBold{(問題：成績)}
3回の試験の点数 
$a, b, c$が与えられたとき、
3回の試験の点数のうち高い方から 2つを足し合わせた合計を出力する


JOI 2019/2020 一次予選: \URL{https://atcoder.jp/contests/joi2020yo1b/tasks/joi2020_yo1b_a}

\hr

\emph{(解法1)}
\begin{enumerate}
\item $a \le b \le c$のとき、$b+c$
\item $a, b, c$の残りの大小関係の組み合わせをすべて調べる
\end{enumerate}

\emph{(解法2)}
\begin{enumerate}
\item 求める最小値は$a + b + c$から$min(a,b,c)$を引いた値である
\end{enumerate}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\hr
\HBold{(問題： 鉛筆)}
文房具店では鉛筆がセットX, Yで売られている．
セット Xは $a$本で $b$円，セット Yは $c$本で $d$円である。
セットXかセットYのどちらのみを選び、$n$本以上の鉛筆を購入する最小金額を求めよ。

JOI 2017/2018 予選: \URL{https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_a}

\hr

\emph{(解法)} 落ち着いて、順番に解いていきましょう
\begin{enumerate}
\item セットX を選んだときの金額を求める
\item セットY を選んだときの金額を求める
\item 上記の小さい金額を求める
\end{enumerate}

\hr
\HBold{(問題： ソーシャルゲーム)}
ソーシャルゲームでは，1日ログインするたびに $a$枚のコインが得られる．
また，7日連続でログインすると，追加で$b$ 枚のコインが得られる．
$c$枚のコインを得るためにログインしなければならない回数の最小値を求めよ．
  
JOI 2018/2019 予選: \URL{https://atcoder.jp/contests/joi2019yo/tasks/joi2019_yo_a}

\hr

\emph{(解法1)} 落ち着いて数式化する
\begin{itemize}
\item はじめの $\lfloor c / (7a+b)\rfloor$ 週間は，毎日ログインする．
\item 残りの必要なコインの枚数を $d$ とすると、
$\lfloor (d + a - 1) / a \rfloor$日、ログインが必要となる
\end{itemize}

\emph{(解法2)} シミュレーション（繰り返しの構造を持ちます）
\begin{enumerate}
\item $d$ 日目に獲得したコインを $x$ 枚とする
\item \verb|d = 1| から始め、$x < c$ の間、以下を繰り返す
\begin{itemize}
\item 毎日 \verb|x += a|, \verb|d += 1|
\item \verb|d % 7 == 0| のとき、 \verb|x += b| 
\end{itemize}
\item $d$ 日目を出力する
\end{enumerate}


 
\if0
\hr
\HBold{(研究：X に最も近い値)}
整数 $x, l, r$が与えられる。$l$以上、$r$以下の整数のうち、$x$との絶対値が最も小さいものを出力せよ

JOI 2019/2020 一次予選: \URL{https://atcoder.jp/contests/joi2020yo1c/tasks/joi2020_yo1c_a}

\fi



